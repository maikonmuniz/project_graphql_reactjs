{"ast":null,"code":"var _jsxFileName = \"/home/maikon/project_graphql_start_rea/src/components/episodes/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Items from \"../Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst query_episodes = gql`\nquery{\n    launchesPast(limit: 10) {\n      mission_name\n      launch_date_local\n    }\n  }`;\n\nfunction Episodes() {\n  _s();\n\n  const teste = [{\n    id: 3\n  }, {\n    id: 2\n  }, {\n    id: 1\n  }];\n  const {\n    loading,\n    data\n  } = useQuery(query_episodes);\n  let a = \"Ola mundo\"; // const [dados, setDados] = useState(\"\")\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando... 0_0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.launchesPast.map(function (item, index) {\n      /*#__PURE__*/\n      _jsxDEV(Items, {\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n\n      console.log(item.mission_name);\n    }), teste.map(function (item) {\n      /*#__PURE__*/\n      _jsxDEV(Items, {\n        item: item.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n\n      console.log(item.id);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Episodes, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Episodes;\nexport default Episodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episodes\");","map":{"version":3,"sources":["/home/maikon/project_graphql_start_rea/src/components/episodes/index.js"],"names":["React","gql","useQuery","Items","query_episodes","Episodes","teste","id","loading","data","a","launchesPast","map","item","index","console","log","mission_name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,cAAc,GAAGH,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,IANA;;AASA,SAASI,QAAT,GAAmB;AAAA;;AACf,QAAMC,KAAK,GAAG,CACV;AAACC,IAAAA,EAAE,EAAE;AAAL,GADU,EAEV;AAACA,IAAAA,EAAE,EAAE;AAAL,GAFU,EAGV;AAACA,IAAAA,EAAE,EAAE;AAAL,GAHU,CAAd;AAKA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBP,QAAQ,CAACE,cAAD,CAAlC;AACA,MAAIM,CAAC,GAAG,WAAR,CAPe,CAQf;;AACA,MAAGF,OAAH,EAAY,oBAAO;AAAA,2BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AAEZ,sBACI;AAAA,eAEGC,IAAI,CAACE,YAAL,CAAkBC,GAAlB,CAAsB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAE3C;AAAA,cAAC,KAAD;AAAmB,QAAA,IAAI,EAAED;AAAzB,SAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,YAAjB;AACA,KAJD,CAFH,EAUGX,KAAK,CAACM,GAAN,CAAU,UAASC,IAAT,EAAe;AAExB;AAAA,cAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,IAAI,CAACN;AAAlB;AAAA;AAAA;AAAA;AAAA;;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACN,EAAjB;AACA,KAJD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA9BQF,Q;UAMqBH,Q;;;KANrBG,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\"\nimport Items from \"../Item\"\n\nconst query_episodes = gql`\nquery{\n    launchesPast(limit: 10) {\n      mission_name\n      launch_date_local\n    }\n  }`;\n\n\nfunction Episodes(){\n    const teste = [\n        {id: 3},\n        {id: 2},\n        {id: 1},\n    ]\n    const { loading, data } = useQuery(query_episodes)\n    let a = \"Ola mundo\"\n    // const [dados, setDados] = useState(\"\")\n    if(loading) return <div><p>Carregando... 0_0</p></div>\n\n    return(\n        <div>\n        {\n           data.launchesPast.map(function(item, index) {\n\n            <Items key={index} item={item}/>\n            console.log(item.mission_name);\n           })\n        }\n\n        {\n           teste.map(function(item) {\n\n            <Items item={item.id}/>\n            console.log(item.id);\n           })\n        }\n        </div>\n    )\n}\n\nexport default Episodes\n"]},"metadata":{},"sourceType":"module"}