{"ast":null,"code":"var _jsxFileName = \"/home/maikon/project_graphql_start_rea/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { client } from \"./config/client-graphql\";\nimport { gql } from \"@apollo/client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    initial();\n  }, []);\n\n  function initial() {\n    client.query({\n      query: gql`\n        query {\n          episodesByIds(ids: [1, 2]) {\n            name\n            characters {\n              name\n            }\n          }\n        }\n        `\n    }).then(res => console.log(res));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maikon/project_graphql_start_rea/src/App.js"],"names":["React","useEffect","client","gql","App","initial","query","then","res","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,OAAT,GAAmB;AACjBH,IAAAA,MAAM,CACHI,KADH,CACS;AACLA,MAAAA,KAAK,EAAEH,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVa,KADT,EAaGI,IAbH,CAaSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbjB;AAcD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;GA1BQJ,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { client } from \"./config/client-graphql\";\nimport { gql } from \"@apollo/client\";\n\nimport \"./App.css\";\n\nfunction App() {\n  useEffect(() => {\n    initial();\n  }, []);\n\n  function initial() {\n    client\n      .query({\n        query: gql`\n        query {\n          episodesByIds(ids: [1, 2]) {\n            name\n            characters {\n              name\n            }\n          }\n        }\n        `,\n      })\n      .then((res) => console.log(res));\n  }\n\n  return (\n    <div className=\"container\">\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}