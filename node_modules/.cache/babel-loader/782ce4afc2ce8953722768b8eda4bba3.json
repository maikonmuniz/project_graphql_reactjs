{"ast":null,"code":"var _jsxFileName = \"/home/maikon/project_graphql_start_rea/src/components/episodes/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Item2 from \"../Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst query_episodes = gql`\nquery{\n        episodesByIds(ids: [1, 10]) {\n          id\n          name\n          characters {\n            name\n          }\n        }\n      }`;\n\nfunction Episodes() {\n  _s();\n\n  const {\n    data\n  } = useQuery(query_episodes); // const [dados, setDados] = useState(\"\")\n  // if(loading) return <div><p>Carregando... 0_0</p></div>\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.episodesByIds.map((item, index) => {\n      /*#__PURE__*/\n      _jsxDEV(Item2, {\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n\n      console.log(item.name);\n    })\n  }, void 0, false);\n}\n\n_s(Episodes, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = Episodes;\nexport default Episodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episodes\");","map":{"version":3,"sources":["/home/maikon/project_graphql_start_rea/src/components/episodes/index.js"],"names":["React","gql","useQuery","Item2","query_episodes","Episodes","data","episodesByIds","map","item","index","console","log","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,cAAc,GAAGH,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QATA;;AAWA,SAASI,QAAT,GAAmB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACE,cAAD,CAAzB,CADe,CAEf;AACA;;AAEA,sBACA;AAAA,cAEOE,IAAI,CAACC,aAAL,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC;AAAA,cAAC,KAAD;AAAmB,QAAA,IAAI,EAAED;AAAzB,SAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AACH,KAHD;AAFP,mBADA;AAWH;;GAhBQR,Q;UACYH,Q;;;KADZG,Q;AAkBT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\"\nimport Item2 from \"../Item\"\n\nconst query_episodes = gql`\nquery{\n        episodesByIds(ids: [1, 10]) {\n          id\n          name\n          characters {\n            name\n          }\n        }\n      }`;\n\nfunction Episodes(){\n    const { data } = useQuery(query_episodes)\n    // const [dados, setDados] = useState(\"\")\n    // if(loading) return <div><p>Carregando... 0_0</p></div>\n\n    return(\n    <>\n        {\n           data.episodesByIds.map((item, index) => {\n               <Item2 key={index} item={item}/>\n               console.log(item.name)\n           })\n        }\n\n    </>\n    )\n}\n\nexport default Episodes"]},"metadata":{},"sourceType":"module"}